node{
    def buildNumber = BUILD_NUMBER
    stage('SCM Checkout'){
      git credentialsId: '1f41cc36-d7a1-4f4a-bfd9-d2772abe544d', url: 'https://github.com/sree-aug-2024/maven-web-application.git'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven_3.9.9", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
    } 
    
    stage('Build Docker Image'){
      sh "docker build -t 484907488098.dkr.ecr.ap-southeast-2.amazonaws.com/maven-web-application:${buildNumber} ."
    }
    
    stage('Push Docker Image'){
    sh "aws ecr get-login-password --region ap-southeast-2 | docker login --username AWS --password-stdin 484907488098.dkr.ecr.ap-southeast-2.amazonaws.com"
    sh "docker push 484907488098.dkr.ecr.ap-southeast-2.amazonaws.com/maven-web-application:${buildNumber}"
    }

    stage('Deploy Application As Docker Container in Deployment Server'){     
    sshagent(['Doker_dev_server']) {
    sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.1.40 docker rm -f ecr-web-application || true"
    sh "ssh ubuntu@172.31.1.40 aws ecr get-login-password --region ap-southeast-2 | ssh ubuntu@172.31.1.40 docker login --username AWS --password-stdin 484907488098.dkr.ecr.ap-southeast-2.amazonaws.com"
    sh "ssh ubuntu@172.31.1.40 docker run -d --name ecr-web-application -p 7000:8080 484907488098.dkr.ecr.ap-southeast-2.amazonaws.com/maven-web-application:${buildNumber}"
    }
       
    }
     
     
}
